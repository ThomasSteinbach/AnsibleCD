---

- name: create PKI group
  group:
    name: "{{ pki_group }}"
    state: present

- name: create PKI user
  user:
    name: "{{ pki_user }}"
    group: "{{ pki_group }}"
    state: present

- name: create PKI home directory
  file:
    path: "{{ pki_home }}"
    state: directory
    owner: "{{ pki_user }}"
    group: "{{ pki_group }}"
    mode: 0700

- name: create hash file for detecting configuration changes
  copy:
    content: "{{ pki_password }}{{ pki_server_dns }}{{ pki_ca_country }}{{ pki_ca_state }}{{ pki_ca_locality }}{{ pki_ca_organization }}{{ pki_server_extfile_content }}{{ pki_client_extfile_content }}"
    dest: "{{ pki_home }}/.configdiff"
    owner: "{{ pki_user }}"
    group: "{{ pki_group }}"
    mode: 0600
  register: pkiconfig

- name: remove old pki files when configuration has changed
  file:
    path: "{{ pki_home }}/{{ item }}"
    state: absent
  with_items:
    - passwordfile
    - ca-key.pem
    - ca.pem
    - server-key.pem
    - server.csr
    - server-cert.pem
    - client-key.pem
    - client.csr
    - client-cert.pem
  when: pkiconfig | changed

- name: create password file
  copy:
    content: "{{ pki_password }}"
    dest: "{{ pki_home }}/passwordfile"
    owner: "{{ pki_user }}"
    group: "{{ pki_group }}"
    mode: 0600

- name: Generate CA private key
  command: openssl genrsa -aes256 -out ca-key.pem -passout file:passwordfile 4096
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/ca-key.pem"

- name: Generate CA public key
  command: openssl req -new -x509 -days 365 -key ca-key.pem -passin file:passwordfile -sha256 -out ca.pem -subj "/C={{ pki_ca_country }}/ST={{ pki_ca_state }}/L={{ pki_ca_locality }}/O={{ pki_ca_organization }}/CN={{ pki_server_dns }}"
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/ca.pem"

- name: Create Server private key
  command: openssl genrsa -out server-key.pem 4096
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/server-key.pem"

- name: Create Server CSR
  command: openssl req -subj "/CN={{ pki_server_dns }}" -sha256 -new -key server-key.pem -out server.csr
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/server.csr"

- name: Create Server extfile.cnf
  copy:
    content: "{{ pki_server_extfile_content }}"
    dest: "{{ pki_home }}/server-extfile.cnf"

- name: Sign the Servers public key
  command: openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -passin file:passwordfile -CAcreateserial -out server-cert.pem -extfile server-extfile.cnf
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/server-cert.pem"

- name: Create Client private key
  command: openssl genrsa -out client-key.pem 4096
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/client-key.pem"

- name: Create Client CSR
  command: openssl req -subj '/CN=client' -new -key client-key.pem -out client.csr
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/client.csr"

- name: Create Client extfile.cnf
  copy:
    content: "{{ pki_client_extfile_content }}"
    dest: "{{ pki_home }}/client-extfile.cnf"

- name: Sign the Clients public key
  command: openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -passin file:passwordfile -CAcreateserial -out client-cert.pem -extfile client-extfile.cnf
  args:
    chdir: "{{ pki_home }}"
    creates: "{{ pki_home }}/client-cert.pem"

- name: protect private key files
  file:
    path: "{{ pki_home }}/{{ item }}-key.pem"
    owner: "{{ pki_user }}"
    group: "{{ pki_group }}"
    mode: 0400
  with_items:
    - ca
    - server
    - client

- name: protect public key files
  file:
    path: "{{ pki_home }}/{{ item }}.pem"
    owner: "{{ pki_user }}"
    group: "{{ pki_group }}"
    mode: 0444
  with_items:
    - ca
    - server-cert
    - client-cert
